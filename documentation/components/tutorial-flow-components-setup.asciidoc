---
title: Using Vaadin Components
order: 1
layout: page
---

= Using Vaadin Components

<<<<<<< HEAD
The Vaadin platform includes a set of https://vaadin.com/components/browse[components], with server-side Java APIs, that you can use to build your UI.   

The components are included, together with Flow, as dependencies in platform.

The _vaadin-core_ module includes all open source components, such as TextField, Button and Grid. The _vaadin_ module extends this set with all officially supported components in Vaadin platform, like Vaadin Charts.

== Vaadin Platform Dependency

The components are part of the Vaadin platform and are included as dependencies, together with Flow. Each component has a Java API. 

Using the platform dependency (com.vaadin:vaadin) ensures that all available components, both open source and commercial, are included automatically. You are guaranteed to get compatible versions of both Flow and the components.

*Example*: Declaring the `vaadin.platform` dependency. 

=======
There is a set of pre-built server-side components with Java API for https://vaadin.com/components/browse[Vaadin Web Components],
such as `Button`, `TextField` and so on. Those components are part of the Vaadin platform,
and are included as dependencies in the platform together with Flow.

The platform has the following components with Java API available:

- `Button` - https://vaadin.com/components/vaadin-button/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/button/Button.html[Javadoc], https://github.com/vaadin/vaadin-button-flow[sources and issue tracking]
- `CheckBox` - https://vaadin.com/components/vaadin-checkbox/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/checkbox/Checkbox.html[Javadoc], https://github.com/vaadin/vaadin-checkbox-flow[sources and issue tracking]
- `ComboBox` - https://vaadin.com/components/vaadin-combo-box/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/combobox/ComboBox.html[Javadoc], https://github.com/vaadin/vaadin-combo-box-flow[sources and issue tracking]
- `DatePicker` - https://vaadin.com/components/vaadin-date-picker/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/datepicker/DatePicker.html[Javadoc], https://github.com/vaadin/vaadin-date-picker-flow[sources and issue tracking]
- `Dialog` - https://vaadin.com/components/vaadin-dialog/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/dialog/Dialog.html[Javadoc], https://github.com/vaadin/vaadin-dialog-flow[sources and issue tracking]
- `FormLayout` - https://vaadin.com/components/vaadin-form-layout/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/formlayout/FormLayout.html[Javadoc], https://github.com/vaadin/vaadin-form-layout-flow[sources and issue tracking]
- `Grid` - https://vaadin.com/components/vaadin-grid/java-examples[Demos], <<tutorial-flow-grid#,Documentation>>, https://vaadin.com/api/platform/com/vaadin/flow/component/grid/Grid.html[Javadoc], https://github.com/vaadin/vaadin-grid-flow[sources and issue tracking]
- `Icons` - https://vaadin.com/components/vaadin-icons/java-examples[Demos], <<tutorial-flow-icon#,Documentation>>, https://vaadin.com/api/platform/com/vaadin/flow/component/icon/package-summary.html[Javadoc], https://github.com/vaadin/vaadin-icons-flow[sources and issue tracking]
- `IronList` - https://vaadin.com/api/platform/com/vaadin/flow/component/icon/package-summary.html[Javadoc], https://github.com/vaadin/vaadin-iron-list-flow[examples, sources and issue tracking]
- `ListBox` - https://vaadin.com/components/vaadin-list-box/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/listbox/ListBox.html[Javadoc], https://github.com/vaadin/vaadin-list-box-flow[sources and issue tracking]
- `Notification` - https://vaadin.com/components/vaadin-notification/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/notification/Notification.html[Javadoc], https://github.com/vaadin/vaadin-notification-flow[sources and issue tracking]
- `HorizontalLayout` & `VerticalLayout` & `FlexLayout` - https://vaadin.com/components/vaadin-ordered-layout/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/orderedlayout/package-summary.html[Javadoc], https://github.com/vaadin/vaadin-ordered-layout-flow[sources and issue tracking]
- `ProgressBar` - https://vaadin.com/components/vaadin-progress-bar/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/progressbar/ProgressBar.html[Javadoc], https://github.com/vaadin/vaadin-progress-bar-flow[sources and issue tracking]
- `RadioButton` - https://vaadin.com/components/vaadin-radio-button/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/radiobutton/RadioButtonGroup.html[Javadoc], https://github.com/vaadin/vaadin-radio-button-flow[sources and issue tracking]
- `SplitLayout` - https://vaadin.com/components/vaadin-split-layout/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/splitlayout/SplitLayout.html[Javadoc], https://github.com/vaadin/vaadin-split-layout-flow[sources and issue tracking]
- `Tabs` - https://vaadin.com/components/vaadin-tabs/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/tabs/Tabs.html[Javadoc], https://github.com/vaadin/vaadin-tabs-flow[sources and issue tracking]
- `TextField` & `TextArea` & `PasswordField` - https://vaadin.com/components/vaadin-text-field/java-examples[Demos], https://vaadin.com/api/platform/com/vaadin/flow/component/textfield/package-summary.html[Javadoc],  https://github.com/vaadin/vaadin-text-field-flow[sources and issue tracking]
- `Upload` - https://vaadin.com/components/vaadin-upload/java-examples[Demos], <<tutorial-flow-upload#,Documentation>>, https://vaadin.com/api/platform/com/vaadin/flow/component/upload/Upload.html[Javadoc], https://github.com/vaadin/vaadin-upload-flow[sources and issue tracking]


When you use the Vaadin 10 platform dependency, you automatically get *ALL* available components.
Using the platform dependency guarantees that you'll get versions of Flow and the components that are compatible together.
>>>>>>> Bogdan v10 platform rename (#360)
[source,xml]
----
    <dependencies>
    <!-- other dependencies -->
    <!-- component dependency -->
    <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin</artifactId>
        <version>${vaadin.platform.version}</version>
    </dependency>
</dependencies>
----

[NOTE]
It is possible to include components individually by declaring a dependency for each component. See below for an example.

The platform also includes theming for the components that you can edit to ensure the styling suits your UI. See <<../theme/using-component-themes#,Using Component Themes>> for more.

You can find additional prebuilt Web Components (with Java APIs) contributed by the Vaadin community in the https://vaadin.com/directory/search[Vaadin Directory.]

== Individual Component Dependencies

As an alternative to using the platform dependency, you can declare single components as dependencies.

You should add both the Vaadin `bom` and the relevant Flow component package, for example `vaadin-button-flow`, to your project dependencies. The Vaadin `bom` fixes all vaadin-related dependencies to a tested combination, so that the individual components can be added safely. Without the BOM some https://www.webjars.org/ generated dependencies may change in the future because new releases, because of their use of version ranges.

*Example*: Adding the Button component in your `pom.xml` using Maven.

[source,xml]
----
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-bom</artifactId>
            <version>${vaadin.platform.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencyManagement>

<dependencies>
    <!-- other dependencies -->

    <!-- component dependency -->
    <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-button-flow</artifactId>
    </dependency>
</dependencies>
----
<<<<<<< HEAD
=======

== Maven configuration to exclude webjars

If webjar dependencies are not needed, they can be excluded from the project using standard Maven mechanism:
[source,xml]
----
<!-- No webjars == no bom needed and no extra repo needed, but you have to get webjars' files into the build yourself -->
<dependencies>
    <!-- other dependencies -->

    <!-- the dependency with webjars excluded -->
    <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-button-flow</artifactId>
        <version>1.0-SNAPSHOT</version>
        <exclusions>
            <exclusion>
                <groupId>org.webjars.bowergithub.vaadin</groupId>
                <artifactId>*</artifactId>
            </exclusion>
        </exclusions>
    </dependency>

    <!-- other dependencies -->
</dependencies>
----
>>>>>>> Bogdan v10 platform rename (#360)
